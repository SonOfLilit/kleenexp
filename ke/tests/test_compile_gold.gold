{
  "[\"a\"]": "'a'",
  "a": "'a'",
  "\\t\\r\\n": "'\\\\\\\\t\\\\\\\\r\\\\\\\\n'",
  "[0+ #any]": "'.*'",
  "Number [capture 1+ #digit]": "'Number (\\\\d+)'",
  "[capture 2-5 #letter]": "'([A-Za-z]{2,5})'",
  "[": "ParseError",
  "Hello. My name is [capture:name #cap ' ' #cap #cap=[#uppercase [1+ #lowercase]]]. You killed my ['Father' | 'Mother' | 'Son' | 'Daughter' | 'Dog' | 'Hamster']. Prepare to die.": "'Hello\\\\. My name is (?P<name>[A-Z][a-z]+ [A-Z][a-z]+)\\\\. You killed my (?:Father|Mother|Son|Daughter|Dog|Hamster)\\\\. Prepare to die\\\\.'",
  "Hello. My name is [c:name #uc [1+ #lc] ' ' #uc [1+ #lc]]. You killed my ['Father' | 'Mother' | 'Son' | 'Daughter' | 'Dog' | 'Hamster']. Prepare to die.": "'Hello\\\\. My name is (?P<name>[A-Z][a-z]+ [A-Z][a-z]+)\\\\. You killed my (?:Father|Mother|Son|Daughter|Dog|Hamster)\\\\. Prepare to die\\\\.'",
  "['[' | ']']": "'[\\\\[\\\\]]'",
  "[\"[\" | \"]\"]": "'[\\\\[\\\\]]'",
  "[#start_string [lookahead [0+ not #lowercase] #lowercase] [lookahead [0+ not #uppercase] #uppercase] [lookahead [0+ not #digit] [capture #digit]] [not lookahead [0+ #any] [\"123\" | \"pass\" | \"Pass\"]] [6+ #token_character] #end_string]": "'\\\\A(?=[^a-z]*[a-z])(?=[^A-Z]*[A-Z])(?=\\\\D*(\\\\d))(?!.*(?:123|pass|Pass))\\\\w{6,}\\\\Z'",
  "[[comment \"Custom macros can help document intent by naming things\"] #has_lower=[lookahead [0+ not #lowercase] #lowercase] #has_upper=[lookahead [0+ not #uppercase] #uppercase] #has_digit=[lookahead [0+ not #digit] [capture #digit]] #no_common_sequences=[not lookahead [0+ #any] [\"123\" | \"pass\" | \"Pass\"]] #start_string #has_lower #has_upper #has_digit #no_common_sequences [6+ #token_character] #end_string]": "'\\\\A(?=[^a-z]*[a-z])(?=[^A-Z]*[A-Z])(?=\\\\D*(\\\\d))(?!.*(?:123|pass|Pass))\\\\w{6,}\\\\Z'",
  "[#letter][not lookbehind 'ab']": "'[A-Za-z](?<!ab)'",
  "([[1+ #any] [lookbehind 3 #lowercase]])": "'\\\\(.+(?<=[a-z]{3})\\\\)'"
}
